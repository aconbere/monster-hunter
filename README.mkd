# Monster Hunter Binary Decoder

In progress work to decode monster hunter binary files and output them as a sqlite database;

## Decrypting your save file

```
git clone https://github.com/svanheulen/mhef
cd mhef
virtualenv venv
./venv/bin/python setup.py install
./venv/bin/python examples/n3ds/savedata.py --mode=d -i path/to/save/file -o ~/user.decrypted
```

## Building

```bash
cargo build
```

## Commands

### Decode Save

```bash
monster-hunter save decode <path to save file> <path to output database>
```

This will generate a sqlite database from your save file that you can easily query for all sorts of info

### Decompress Archive

```bash
monster-hunter archive decompress <archive/path> <out/path> 
```

This will decompress a MH4U archive file into it's component files.

### Decode Archive

```bash
monster-hunter archive decode <archive/path>
```

This will decode an MH4U embedded `msg` archive file and output it's contents to STDOUT

## TODO

Learn how to extract romfs:

* http://gbatemp.net/threads/download-decrypt9-open-source-decryption-tools-wip.388831/
* http://3dbrew.org/wiki/RomFS

## Extracting the rom and save data

### Homebrew
`https://www.reddit.com/r/3dshacks/comments/40j26g/3ds_hacking_qa_general_now_with_irc/`
`https://smealum.github.io/ninjhax2/starter.zip`

#### Save Data Dumping

`https://gbatemp.net/threads/svdt-save-data-explorer-manager.396562/`
`https://github.com/meladroit/svdt.git`

#### Dumping a rom

Brain Dump

`https://gbatemp.net/threads/braindump-userland-game-dumping.407332/`
`https://github.com/neobrain/braindump`
`https://github.com/neobrain/braindump/releases`


#### Extracting contents from a romfs

https://github.com/3dshax/ctr/tree/master/ctrtool

```bash
ctrtool --exefsdir=exefs <titleid>.cxi \
ctrtool --romfs=romfs.bin --decompresscode <titleid>.cxi \
ctrtool --romfsdir=romfs --intype=romfs romfs.bin
```

#### Dissassembling code.bin

Read code.bin in as 32 bit arm v6 with an offset of 0x100000

#### File information

data/

contains lots of model and texture information

`pl_*_` model data for female and male characters
`o_*` model and texture data (maybe shared?)
`d*`
`pig*` Poogie data

inside of arc files
`*_BM` texture files

monyan == meownster hunters
otomo == palicos

`m\da\d` (ex: m19a01)  == map area data


